{"version":3,"sources":["./ClientApp/app/pages/register/register.component.html","./ClientApp/app/pages/register/register.component.ts","./ClientApp/app/pages/register/register.module.ts"],"names":[],"mappings":";;;;;AAAA,sjBAAsjB,m3F;;;;;;;;;;;;;;;;;;;ACAtjB,8EAA0C;AAC1C,oFAAyC;AACzC,iFAAmE;AACnE,4FAAqF;AACrF,4EAAiD;AAOjD;IAGE,2BAAmB,WAAuB,EAAS,EAAe,EAAS,MAAa;QAArE,gBAAW,GAAX,WAAW,CAAY;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QACtF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,IAAI,EAAE,kBAAU,CAAC,OAAO,CAAC,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClF,OAAO,EAAE,CAAC,IAAI,EAAE,kBAAU,CAAC,OAAO,CAAC,CAAC,kBAAU,CAAC,QAAQ,EAAE,+BAAc,CAAC,CAAC,CAAC;YAC1E,UAAU,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YACrC,iBAAiB,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SAC7C,EAAC,EAAC,SAAS,EAAE,kCAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAC,CAAC,CAAC;IACnE,CAAC;IAEM,oCAAQ,GAAf,UAAgB,MAAa;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,KAAK,CAAC;IACvC,CAAC;IArBU,iBAAiB;QAJ7B,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;SAEzB,CAAC;yCAI+B,0BAAW,EAAa,mBAAW,EAAgB,eAAM;OAH7E,iBAAiB,CAsB7B;IAAD,wBAAC;CAAA;AAtBY,8CAAiB;;;;;;;;;;;;;;;;;ACX9B,8EAAyC;AACzC,oFAA+C;AAC/C,oFAA+C;AAC/C,iFAAkE;AAClE,qFAA0D;AAC1D,uGAAyD;AAE5C,cAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sCAAiB,EAAE,SAAS,EAAE,MAAM,EAAE;CAC9D,CAAC;AAcF;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAZ1B,eAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qBAAY;gBACZ,qBAAY,CAAC,QAAQ,CAAC,cAAM,CAAC;gBAC7B,mBAAW;gBACX,2BAAmB;gBACnB,4BAAY;aACb;YACD,YAAY,EAAE;gBACZ,sCAAiB;aAClB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAlB,wCAAc","file":"register.module.chunk.js","sourcesContent":["module.exports = \"<mat-sidenav-container>\\r\\n  \\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100\\\">\\r\\n  \\r\\n         <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" fxFlex=\\\"80\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex.sm=\\\"60\\\">\\r\\n  \\r\\n              <mat-card class=\\\"p-0 mat-elevation-z24 box register\\\">\\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"bg-primary box-header\\\">\\r\\n                      <button mat-fab color=\\\"accent\\\" class=\\\"mat-elevation-z12\\\" (click)=\\\"onSubmit(form.value);\\\">\\r\\n                          <mat-icon>person_add</mat-icon>\\r\\n                      </button>\\r\\n                      <a mat-button routerLink=\\\"/login\\\">Already have an account? Sign in!</a>\\r\\n                  </div>\\r\\n                  <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"box-content\\\">\\r\\n                      <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mat-elevation-z12 box-content-inner\\\">\\r\\n                          <span class=\\\"box-content-header\\\">Register member</span>  \\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"Full Name\\\" formControlName=\\\"name\\\">\\r\\n                            <mat-error *ngIf=\\\"form.controls.name.errors?.required\\\">Full Name is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"form.controls.name.hasError('minlength')\\\">Full Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                              <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                              <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" minlength=\\\"6\\\">\\r\\n                              <mat-error *ngIf=\\\"form.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                              <mat-error *ngIf=\\\"form.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                          </mat-form-field> \\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\">\\r\\n                            <mat-error *ngIf=\\\"form.controls.confirmPassword.errors?.required\\\">Confirm Password is required</mat-error>\\r\\n                            <mat-error *ngIf=\\\"form.controls.confirmPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\r\\n                          </mat-form-field>\\r\\n                      </mat-card>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" class=\\\"mat-elevation-z12 box-button\\\" type=\\\"submit\\\">SIGN UP</button>\\r\\n                  </mat-card-content>\\r\\n              </mat-card>\\r\\n              \\r\\n         </form>      \\r\\n    \\r\\n    </div>\\r\\n  \\r\\n  </mat-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/pages/register/register.component.html\n// module id = ./ClientApp/app/pages/register/register.component.html\n// module chunks = register.module","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { emailValidator, matchingPasswords } from '../../theme/utils/app-validators';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n  public form:FormGroup;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public fb: FormBuilder, public router:Router){\r\n    this.settings = this.appSettings.settings; \r\n    this.form = this.fb.group({\r\n      'name': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'email': [null, Validators.compose([Validators.required, emailValidator])],\r\n      'password': ['', Validators.required],\r\n      'confirmPassword': ['', Validators.required]\r\n    },{validator: matchingPasswords('password', 'confirmPassword')});\r\n  }\r\n\r\n  public onSubmit(values:Object):void {\r\n    if (this.form.valid) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.settings.loadingSpinner = false; \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/pages/register/register.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent\r\n  ]\r\n})\r\nexport class RegisterModule { }\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/pages/register/register.module.ts"],"sourceRoot":"webpack:///"}